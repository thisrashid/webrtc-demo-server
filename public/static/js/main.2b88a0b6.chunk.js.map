{"version":3,"sources":["App.module.scss","components/VideoCall/VideoCall.module.scss","components/UserList/UserList.module.scss","components/Login/Login.module.scss","redux/index.ts","utils/WebSocket.ts","utils/AppContext.ts","utils/WebRTC.ts","components/VideoCall/VideoCall.tsx","components/UserList/UserList.tsx","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","INIT_STATE","username","clientId","users","messages","sockMsgs","endCall","reducer","state","action","type","name","offer","message","rtc","desc","RTCSessionDescription","connection","setRemoteDescription","socket","addIceCandidate","RTCIceCandidate","candidate","console","error","client","defaultValue","actions","AppContext","React","createContext","useAppContext","useContext","sendToServer","msg","Error","msgJSON","JSON","stringify","send","reportError","errMessage","text","time","Date","trace","toLocaleTimeString","log_error","WebRTC","targetUser","conn","handleICECandidateEvent","event","target","handleICEConnectionStateChangeEvent","iceConnectionState","closeVideoCall","handleICEGatheringStateChangeEvent","iceGatheringState","handleSignalingStateChangeEvent","signalingState","handleNegotiationNeededEvent","a","createOffer","log","setLocalDescription","sdp","localDescription","handleTrackEvent","ontrack","onicecandidate","oniceconnectionstatechange","onsignalingstatechange","onicegatheringstatechange","onnegotiationneeded","getTransceivers","forEach","transceiver","stop","close","this","RTCPeerConnection","iceServers","urls","createAndSendAnswer","peerConn","createAnswer","answer","from","VideoCall","join","onCallEnd","useState","localStream","setLocalStream","remoteStream","setRemoteStream","isCallStarted","setStartCall","isJoined","setJoined","isAnswered","setAnswered","isMuteLocal","setMuteLocal","isPauseLocal","setPauseLocal","localVideo","setLocalVideo","setRtc","window","useEffect","getVideoTracks","enabled","getAudioTracks","handleEndCall","useCallback","srcObject","pause","getTracks","track","initRtc","undefined","createAndSendOffer","createPeerConn","mode","navigator","mediaDevices","getUserMedia","video","frameRate","width","min","ideal","max","aspectRatio","audio","stream","addTrack","e","streams","startCall","className","styles","data-testid","LocalVideo","autoPlay","ref","muted","RemoteVideo","CallActionDiv","onClick","UserList","user","selectedUser","setSelectedUser","callUser","currentUser","currentTarget","dataset","handleCallEnd","map","index","data-name","Login","onMessage","setName","isConnected","setIsConnected","handleInput","evt","value","setUserName","connect","ws","WebSocket","onopen","onerror","createWebSocket","onmessage","initSocket","to","id","maxLength","required","onChange","autoComplete","inputMode","placeholder","PrivateRoute","children","rest","render","location","pathname","App","useReducer","dispatch","setOffer","gotoVideoCall","setVideoCall","reduxActions","useMemo","setUsers","videoOffer","answerVideo","onAnswer","Provider","AppHeader","Calling","CallingMessage","src","loop","CallingActions","Accept","Reject","path","parse","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,uBAAuB,QAAU,qBAAqB,eAAiB,4BAA4B,eAAiB,4BAA4B,OAAS,oBAAoB,OAAS,sB,mBCA3OD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,WAAa,8BAA8B,YAAc,+BAA+B,cAAgB,mC,mBCAlND,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,uB,8ICgBbC,EAAoB,CAC/BC,SAAU,GACVC,UAAW,EACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,SAAS,GAGJ,SAASC,EAAQC,EAAcC,GAAiB,IAAD,EAEpD,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAKF,GAAZ,IAAmBP,SAAUQ,EAAOE,OAEtC,IAAK,YACH,OAAO,2BAAKH,GAAZ,IAAmBL,MAAOM,EAAON,QAWnC,IAAK,cACH,OAAO,2BACFK,GADL,IAEEI,MAAOH,EAAOI,UAGlB,IAAK,WACH,OAAO,2BACFL,GADL,IAEEM,IAAKL,EAAOI,QACZP,SAAS,IAGb,IAAK,YACH,IAAMS,EAAO,IAAIC,sBAAsBP,EAAOI,SAE9C,OADA,UAAAL,EAAMM,WAAN,SAAWG,WAAWC,qBAAqBH,GACpC,eACFP,GAGP,IAAK,cACH,OAAO,2BACFA,GADL,IAEEW,OAAQX,EAAMW,QAAUV,EAAOI,UAGnC,IAAK,oBAAsB,IAAD,EAIxB,OAHA,UAAAL,EAAMM,WAAN,SAAWG,WAAWG,gBACpB,IAAIC,gBAAgBZ,EAAOI,QAAQS,YAE9B,2BACFd,GADL,IAEEM,IAAKN,EAAMM,MAIf,IAAK,WACH,OAAO,2BAAKN,GAAZ,IAAmBF,SAAS,IAE9B,QAGE,OADAiB,QAAQC,MAAMhB,EAAOC,GACdD,GAIN,IC1FHiB,EACAxB,ECOEyB,EAA+B,CAAEC,QAAS,GAAInB,MAAOR,GAE9C4B,EAAaC,IAAMC,cAAcJ,GAEjCK,EAAgB,kBAAMF,IAAMG,WAAWJ,I,wCDiBvCK,EAAe,SAACC,GAC3B,IAAKT,EACH,MAAMU,MACJ,4EAGJD,EAAIjC,SAAWiC,EAAIjC,UAAYA,EAC/B,IAAImC,EAAUC,KAAKC,UAAUJ,GAG7BT,EAAOc,KAAKH,IEhCd,SAASI,EAAYC,IAIrB,SAAmBC,GACjB,IAAIC,EAAO,IAAIC,KAEfrB,QAAQsB,MAAM,IAAMF,EAAKG,qBAAuB,KAAOJ,GANvDK,CAAU,SAAD,OAAUN,EAAW9B,KAArB,aAA8B8B,EAAW5B,UAS7C,IAAMmC,EAAb,WASE,WAAY/C,EAAkBgD,GAAqB,IAAD,gCAR1CC,UAQ0C,OAPlDjD,cAOkD,OANlDgD,gBAMkD,OAgC1CE,wBAA0B,SAACC,GAC7BA,EAAM9B,YAC6B8B,EAAM9B,UAAUA,UAErDW,EAAa,CACXvB,KAAM,oBACN2C,OAAQ,EAAKJ,WACb3B,UAAW8B,EAAM9B,cAvC2B,KA4C1CgC,oCAAsC,WAG5C,OAF6C,EAAKJ,KAAKK,mBAE/C,EAAKL,KAAKK,oBAChB,IAAK,SACL,IAAK,SACL,IAAK,eACH,EAAKC,mBAnDuC,KAwD1CC,mCAAqC,WACE,EAAKP,KAAKQ,mBAzDP,KA4D1CC,gCAAkC,WAExC,OADgD,EAAKT,KAAKU,eAClD,EAAKV,KAAKU,gBAChB,IAAK,SACH,EAAKJ,mBAhEuC,KAqE1CK,6BArE0C,sBAqEX,4BAAAC,EAAA,+EAKf,EAAKZ,KAAKa,cALK,UAK7BnD,EAL6B,8BAOjCW,QAAQyC,IAAI,qBAPqB,6BAeF,WAA7B,EAAKd,KAAKU,eAfqB,oEAwB7B,EAAKV,KAAKe,oBAAoBrD,GAxBD,QA6BnCqB,EAAa,CACXtB,KAAM,EAAKV,SACXoD,OAAQ,EAAKJ,WACbvC,KAAM,cACNwD,IAAK,EAAKhB,KAAKiB,mBAjCkB,kDAuCnC3B,EAAY,EAAD,IAvCwB,0DArEW,KAgH1C4B,iBAAmB,SAAChB,KAhHsB,KAsH1CI,eAAiB,WAOnB,EAAKN,OAMP,EAAKA,KAAKmB,QAAU,KACpB,EAAKnB,KAAKoB,eAAiB,KAC3B,EAAKpB,KAAKqB,2BAA6B,KACvC,EAAKrB,KAAKsB,uBAAyB,KACnC,EAAKtB,KAAKuB,0BAA4B,KACtC,EAAKvB,KAAKwB,oBAAsB,KAIhC,EAAKxB,KAAKyB,kBAAkBC,SAAQ,SAACC,GACnCA,EAAYC,UAgBd,EAAK5B,KAAK6B,UA5JZC,KAAK/E,SAAWA,EAChB+E,KAAK/B,WAAaA,EAelB+B,KAAK9B,KAAO,IAAI+B,kBAXM,CACpBC,WAAY,CACV,CACEC,KAAM,CACJ,+BACA,gCACA,qCArBZ,4CAKE,WACE,OAAOH,KAAK9B,SANhB,K,wBCLMkC,EAAmB,uCAAG,WAAOC,EAA6BzE,GAApC,iBAAAkD,EAAA,6DACpB/C,EAAO,IAAIC,sBAAsBJ,EAAMA,OADnB,SAEpByE,EAASnE,qBAAqBH,GAFV,uBAGLsE,EAASC,eAHJ,cAGpBC,EAHoB,gBAIpBF,EAASpB,oBAAoBsB,GAJT,OAK1BtD,EAAa,CACXhC,SAAUW,EAAM4E,KAChB9E,KAAM,cACN6E,OAAQA,IARgB,2CAAH,wDAuNVE,EA3M4B,SAAC,GAAiC,IAAD,EAA9BpC,EAA8B,EAA9BA,OAAQqC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC1D,EACE9D,IAAM+D,WADR,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,EACEjE,IAAM+D,WADR,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAsCnE,IAAM+D,UAAS,GAArD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA8BrE,IAAM+D,UAAS,GAA7C,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAkCvE,IAAM+D,UAAS,GAAjD,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAoCzE,IAAM+D,UAAS,GAAnD,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAsC3E,IAAM+D,UAAS,GAArD,mBAAOa,EAAP,KAAqBC,EAArB,KACA,EACE7E,IAAM+D,WADR,mBAAOe,EAAP,KAAmBC,EAAnB,KAGA,EAAsB/E,IAAM+D,WAA5B,mBAAO9E,EAAP,KAAY+F,EAAZ,KAEA,EAA2B9E,IAAnBvB,EAAR,EAAQA,MAAOmB,EAAf,EAAeA,QAEdmF,OAAetG,MAAQA,EAExBqB,IAAMkF,WAAU,WACVlB,IACFA,EAAYmB,iBAAiB,GAAGC,QAAUR,KAE3C,CAACA,EAAcZ,IAElBhE,IAAMkF,WAAU,WACVlB,IACFA,EAAYqB,iBAAiB,GAAGD,QAAUV,KAE3C,CAACA,EAAaV,IAEjB,IAcMsB,GAAgBtF,IAAMuF,aAAY,WAAO,IAAD,GAC5C,UAAI5G,EAAMM,WAAV,aAAI,EAAWG,cACbT,EAAMM,IAAIG,WAAWoD,QAAU,KAC/B7D,EAAMM,IAAIG,WAAWqD,eAAiB,KACtC9D,EAAMM,IAAIG,WAAWsD,2BAA6B,KAClD/D,EAAMM,IAAIG,WAAWuD,uBAAyB,KAC9ChE,EAAMM,IAAIG,WAAWwD,0BAA4B,KACjDjE,EAAMM,IAAIG,WAAWyD,oBAAsB,KAE3ClE,EAAMM,IAAIG,WAAW0D,kBAAkBC,SAAQ,SAACC,GAC9CA,EAAYC,WAGd,OAAI6B,QAAJ,IAAIA,OAAJ,EAAIA,EAAYU,aACdV,EAAWW,QACVX,EAAWU,UAA0BE,YAAY3C,SAAQ,SAAC4C,GACzDA,EAAM1C,WAIVtE,EAAMM,IAAIG,WAAW8D,QACrBpD,EAAQ8F,aAAQC,GAChBzF,EAAa,CACXvB,KAAM,WACN2C,WAGFsC,OAED,CAAChE,EAASgF,EAAYhB,EAAtB,UAAiCnF,EAAMM,WAAvC,aAAiC,EAAWG,WAAYoC,IA2G3D,OAzGAxB,IAAMkF,WAAU,WACd,IAAMY,EAAkB,uCAAG,WAAOtC,GAAP,eAAAvB,EAAA,sEACLuB,EAAStB,YAAY,IADhB,OACnBnD,EADmB,OAGzBqB,EAAa,CACXoB,SACA3C,KAAM,cACNE,MAAOA,IAGTyE,EAASpB,oBAAoBrD,GATJ,2CAAH,sDAYlBgH,EAAc,uCAAG,WAAOC,GAAP,iBAAA/D,EAAA,sEACAgE,UAAUC,aAAaC,aAAa,CACvDC,MAAO,CACLC,UAAW,GACXC,MAAO,CACLC,IAAK,IACLC,MAAO,IACPC,IAAK,MAEPC,YAAa,SAEfC,OAAO,IAXY,cACfC,EADe,OAcrB3C,EAAe2C,GAET3H,EAAM,IAAIkC,EAAOxC,EAAMP,SAAUoD,GACvC1B,EAAQ8F,QAAQ3G,GAChB+F,EAAO/F,EAAIG,YAEXwH,EAAOlB,YAAY3C,SAAQ,SAAU4C,GACnC1G,EAAIG,WAAWyH,SAASlB,EAAOiB,MAGjC3H,EAAIG,WAAWoD,QAAU,SAACsE,GACxB3C,EAAgB2C,EAAEC,QAAQ,KAI1B9H,EAAIG,WAAWqD,eADJ,UAATuD,EAC8B,SAACc,GACZ,MAAfA,EAAErH,WAINW,EAAa,CACXoB,SACA3C,KAAM,kBACNY,UAAWqH,EAAErH,aAIe,SAACqH,GACZ,MAAfA,EAAErH,WAENW,EAAa,CACXhC,SAAUO,EAAMI,MAAM4E,KACtB9E,KAAM,iBACNY,UAAWqH,EAAErH,aA/CE,kBAoDdR,GApDc,4CAAH,sDAuDd+H,EAAS,uCAAG,4BAAA/E,EAAA,sEACE8D,EAAe,SADjB,OACV9G,EADU,OAGhB6G,EAAmB7G,EAAIG,YAHP,2CAAH,qDAMVyE,GAASO,IACZC,GAAa,GACb2C,KAEEnD,IAASS,IACXC,GAAU,GACVwB,EAAe,WAEhB,CACDpH,EAAMP,SACNO,EAAMI,MACNe,EACA+D,EACArC,EACA4C,EACAE,IAGFtE,IAAMkF,WAAU,WACVvG,EAAMI,OAASE,IAAQuF,IACzBC,GAAY,GACZlB,EAAoBtE,EAAKN,EAAMI,UAEhC,CAACJ,EAAMI,MAAOE,EAAKuF,EAAYhD,IAElCxB,IAAMkF,WAAU,WACVvG,EAAMF,SACR6G,OAED,CAAC3G,EAAMF,QAAS6G,KAGjB,sBAAK2B,UAAWC,IAAOtD,UAAWuD,cAAY,YAA9C,UACE,uBACEF,UAAWC,IAAOE,WAClBC,UAAQ,EACRC,IA3JW,SAAClB,GACZpC,GAAeoC,IACjBA,EAAMZ,UAAYxB,EAClBe,EAAcqB,KAyJZmB,OAAK,IAEP,uBAAON,UAAWC,IAAOM,YAAaH,UAAQ,EAACC,IAvJjC,SAAClB,GACblC,GAAgBkC,IAClB1G,QAAQyC,IAAI,mBAAoBiE,EAAOlC,GACvCkC,EAAMZ,UAAYtB,MAqJlB,sBAAK+C,UAAWC,IAAOO,cAAvB,UACE,yBAAQC,QAAS,kBAAM7C,GAAeD,IAAtC,UACGA,EAAe,OAAS,QAD3B,YAGA,yBAAQ8C,QAAS,kBAAM/C,GAAcD,IAArC,UACGA,EAAc,SAAW,OAD5B,YAGA,wBAAQgD,QAASpC,GAAjB,6B,iBCvKOqC,EA7C2B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAM9D,EAAgB,EAAhBA,UACjD,EAAwC9D,IAAM+D,SAAS,IAAvD,mBAAO8D,EAAP,KAAqBC,EAArB,KACQnJ,EAAUuB,IAAVvB,MAEFoJ,EAAW/H,IAAMuF,aACrB,SAAChE,GACC,IAAMyG,EAAczG,EAAM0G,cAAcC,QAAQpJ,KAC5CkJ,GAAerJ,EAAMP,WAAa4J,IACpCtI,QAAQyC,IAAI,cAAe6F,GAC3BF,EAAgBE,MAGpB,CAACrJ,EAAMP,WAGH+J,EAAgBnI,IAAMuF,aAAY,WACtCuC,EAAgB,IAChBhE,GAAaA,IACbpE,QAAQyC,IAAI,gBACX,CAAC2B,IAMJ,OAJA9D,IAAMkF,WAAU,WACd4C,EAAgBF,GAAQ,MACvB,CAACA,IAEAC,EAEA,cAAC,EAAD,CACErG,OAAQqG,EACRhE,OAAQ+D,EACR9D,UAAWqE,IAMf,oBAAIlB,UAAWC,IAAOS,SAAUR,cAAY,WAA5C,SACGxI,EAAML,MAAM8J,KAAI,SAACR,EAAMS,GAAP,OACf,oBAAgBC,YAAWV,EAAMF,QAASK,EAA1C,SACGH,GADMS,S,iBCiBFE,EAvDoB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UACpC,EAAwBxI,IAAM+D,SAAS,IAAvC,mBAAOjF,EAAP,KAAa2J,EAAb,KACA,EAAsCzI,IAAM+D,UAAS,GAArD,mBAAO2E,EAAP,KAAoBC,EAApB,KACQ7I,EAAYI,IAAZJ,QAEF8I,EAAc5I,IAAMuF,aACxB,SAACsD,GACCJ,EAAQI,EAAIrH,OAAOsH,OACnBhJ,EAAQiJ,YAAYF,EAAIrH,OAAOsH,SAEjC,CAAChJ,IAGGkJ,EAAUhJ,IAAMuF,aAAY,WAChC7F,QAAQyC,IAAI,WACZ,IAAM8G,ELrBqB,SAACnK,GAc9B,OATAc,EAAS,IAAIqF,OAAOiE,UAAX,iCAAuD,QAEhE9K,EAAWU,EACXc,EAAOuJ,OAAS,WACdzJ,QAAQyC,IAAI,+BAGdvC,EAAOwJ,QAAU,SAACtC,GAAD,OAAOpH,QAAQC,MAAM,4BAA6BmH,IAE5DlH,EKOMyJ,CAAgBvK,GAC3BmK,EAAGG,QAAU,SAAC7H,GACZ7B,QAAQC,MAAM,mBAAoB4B,IAGpC0H,EAAGE,OAAS,WACVzJ,QAAQyC,IAAI,8BACZ/B,EAAa,CACXvB,KAAM,aACNT,SAAUU,IAEZ6J,GAAe,IAGjBM,EAAGK,UAAYd,EACf1I,EAAQyJ,WAAWN,KAClB,CAACT,EAAW1I,EAAShB,IAExB,OAAI4J,EACK,cAAC,IAAD,CAAUc,GAAG,eAGpB,sBAAKvC,UAAWC,IAAOqB,MAAOpB,cAAY,QAA1C,UACE,6CACA,uBACEsC,GAAG,OACH5K,KAAK,OACL6K,UAAW,GACXC,UAAQ,EACRb,MAAOhK,EACP8K,SAAUhB,EACViB,aAAa,WACbC,UAAU,OACVC,YAAY,aAEd,wBAAQrC,QAASsB,EAAjB,uB,iBCjDN,SAASgB,EAAT,GAG4E,IAF1EC,EAEyE,EAFzEA,SACGC,EACsE,4BACjEvL,EAAUuB,IAAVvB,MACR,OACE,cAAC,IAAD,2BACMuL,GADN,IAEEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACNzL,EAAMP,SACJ6L,EAEA,cAAC,IAAD,CACET,GAAI,CACFa,SAAU,SACV1L,MAAO,CAAEgF,KAAMyG,UA0GdE,MAjGf,WACE,MAA0BtK,IAAMuK,WAAW7L,EAASP,GAApD,mBAAOQ,EAAP,KAAc6L,EAAd,KACA,EAA0BxK,IAAM+D,UAAc,GAA9C,mBAAOhF,EAAP,KAAc0L,EAAd,KACA,EAAsCzK,IAAM+D,UAAS,GAArD,mBAAO2G,EAAP,KAAsBC,EAAtB,KAEMC,EAAe5K,IAAM6K,SAAQ,WACjC,OPkDmB,SAACL,GACtB,MAAO,CACLzB,YADK,SACOjK,GACV0L,EAAS,CAAE3L,KAAM,gBAAiBC,UAEpCgM,SAJK,SAIIxM,GACPkM,EAAS,CAAE3L,KAAM,YAAaP,WAWhCiB,gBAhBK,SAgBWP,GACdwL,EAAS,CAAE3L,KAAM,oBAAqBG,aAExC+L,WAnBK,SAmBM/L,GACTwL,EAAS,CAAE3L,KAAM,cAAeG,aAElCgM,YAtBK,SAsBOhM,GACVwL,EAAS,CAAE3L,KAAM,eAAgBG,aAEnC4G,QAzBK,SAyBG5G,GACNwL,EAAS,CAAE3L,KAAM,WAAYG,aAE/BuK,WA5BK,SA4BMvK,GACTwL,EAAS,CAAE3L,KAAM,cAAeG,aAElCiM,SA/BK,SA+BIjM,GACPwL,EAAS,CAAE3L,KAAM,YAAaG,aAEhCP,QAlCK,WAmCH+L,EAAS,CAAE3L,KAAM,eOtFZiB,CAAQ0K,KACd,IAiCH,OACE,cAACzK,EAAWmL,SAAZ,CAAqBpC,MAAO,CAAEnK,QAAOmB,QAAS8K,GAA9C,SACE,sBAAK3D,UAAWC,IAAOoD,IAAvB,UACE,wBAAQrD,UAAWC,IAAOiE,UAA1B,SACE,iDAEDpM,IAAU2L,GACT,sBAAKzD,UAAWC,IAAOkE,QAAvB,UACE,sBAAKnE,UAAWC,IAAOmE,eAAvB,UACE,8BAAKtM,EAAc4E,KAAnB,iBACA,uBAAO2H,IAAI,kBAAkBjE,UAAQ,EAACkE,MAAI,OAE5C,sBAAKtE,UAAWC,IAAOsE,eAAvB,UACE,wBACEvE,UAAWC,IAAOuE,OAClB/D,QAAS,WAEPiD,GAAa,IAJjB,oBASA,wBACE1D,UAAWC,IAAOwE,OAClBhE,QAAS,WAEP+C,OAAS5E,IAJb,0BAYL6E,EACC,cAAC,EAAD,CACE9C,KAAO7I,EAAc4E,KACrBG,UAAW,WACT6G,GAAa,GACbF,OAAS5E,MAIb,eAAC,IAAD,WACE,cAACmE,EAAD,CAAc2B,KAAK,aAAnB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,CAAOnD,UA/ED,SAACK,GACjB,IAAIxI,EAAMG,KAAKoL,MAAM/C,EAAIgD,MAEzB,OAAQxL,EAAIxB,MACV,IAAK,WACH+L,EAAaE,SAASzK,EAAI/B,OAC1B,MAEF,IAAK,SACHsM,EAAaK,SAAS5K,EAAIqD,QAC1B,MAEF,IAAK,YACHkH,EAAarL,gBAAgBc,GAC7B,MAEF,IAAK,QACHuK,EAAaG,WAAW1K,GACxBoK,EAASpK,GACT,MAEF,IAAK,WACHuK,EAAanM,UACb,MAEF,QAEEiB,QAAQC,MAAM,4BAA6BU,kBCxDpCyL,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCFdQ,IAASpC,OACP,cAAC,IAAMqC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b88a0b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"AppHeader\":\"App_AppHeader__3Nt2M\",\"Calling\":\"App_Calling__s5tkl\",\"CallingMessage\":\"App_CallingMessage__8vYW5\",\"CallingActions\":\"App_CallingActions__3pbvY\",\"Accept\":\"App_Accept__1iRs5\",\"Reject\":\"App_Reject__2yU0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VideoCall\":\"VideoCall_VideoCall__Md-QN\",\"VideoCallDiv\":\"VideoCall_VideoCallDiv__33d1c\",\"LocalVideo\":\"VideoCall_LocalVideo__3y-KR\",\"RemoteVideo\":\"VideoCall_RemoteVideo__35n1f\",\"CallActionDiv\":\"VideoCall_CallActionDiv__205Cm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__2skpg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__7nyz_\"};","import { Message } from \"../utils/types\";\nimport { WebRTC } from \"../utils/WebRTC\";\nimport { Action } from \"./actions\";\n\nexport type State = {\n  username: string;\n  clientId: number;\n  users: string[];\n  messages: Message[];\n  sockMsgs: any[];\n  rtc?: WebRTC;\n  offer?: any;\n  socket?: WebSocket;\n  answer?: any;\n  endCall: boolean;\n};\n\nexport const INIT_STATE: State = {\n  username: \"\",\n  clientId: -1,\n  users: [],\n  messages: [],\n  sockMsgs: [],\n  endCall: false,\n};\n\nexport function reducer(state: State, action: Action) {\n  // console.log(action.type, state, action);\n  switch (action.type) {\n    case \"SET_USER_NAME\":\n      return { ...state, username: action.name };\n\n    case \"SET_USERS\":\n      return { ...state, users: action.users };\n\n    // case \"SET_CLIENT_ID\":\n    //   return { ...state, clientId: action.clientId };\n\n    // case \"ADD_MESSAGE\":\n    //   return { ...state, messages: [...state.messages, action.message] };\n\n    // case \"ADD_SOCK_MESSAGE\":\n    //   return { ...state, sockMsgs: [...state.sockMsgs, action.message] };\n\n    case \"VIDEO_OFFER\":\n      return {\n        ...state,\n        offer: action.message,\n      };\n\n    case \"INIT_RTC\":\n      return {\n        ...state,\n        rtc: action.message,\n        endCall: false,\n      };\n\n    case \"ON_ANSWER\":\n      const desc = new RTCSessionDescription(action.message);\n      state.rtc?.connection.setRemoteDescription(desc);\n      return {\n        ...state,\n      };\n\n    case \"INIT_SOCKET\":\n      return {\n        ...state,\n        socket: state.socket || action.message,\n      };\n\n    case \"ADD_ICE_CANDIDATE\": {\n      state.rtc?.connection.addIceCandidate(\n        new RTCIceCandidate(action.message.candidate)\n      );\n      return {\n        ...state,\n        rtc: state.rtc,\n      };\n    }\n\n    case \"END_CALL\":\n      return { ...state, endCall: true };\n\n    default:\n      // throw new Error();\n      console.error(state, action);\n      return state;\n  }\n}\n\nexport const actions = (dispatch: (action: Action) => void) => {\n  return {\n    setUserName(name: string) {\n      dispatch({ type: \"SET_USER_NAME\", name });\n    },\n    setUsers(users: string[]) {\n      dispatch({ type: \"SET_USERS\", users });\n    },\n    // setClientId(clientId: number) {\n    //   dispatch({ type: \"SET_CLIENT_ID\", clientId });\n    // },\n    // addMessage(message: Message) {\n    //   dispatch({ type: \"ADD_MESSAGE\", message });\n    // },\n    // addSockMessage(message: any) {\n    //   dispatch({ type: \"ADD_SOCK_MESSAGE\", message });\n    // },\n    addIceCandidate(message: any) {\n      dispatch({ type: \"ADD_ICE_CANDIDATE\", message });\n    },\n    videoOffer(message: any) {\n      dispatch({ type: \"VIDEO_OFFER\", message });\n    },\n    answerVideo(message: any) {\n      dispatch({ type: \"ANSWER_VIDEO\", message });\n    },\n    initRtc(message: WebRTC) {\n      dispatch({ type: \"INIT_RTC\", message });\n    },\n    initSocket(message: WebSocket) {\n      dispatch({ type: \"INIT_SOCKET\", message });\n    },\n    onAnswer(message: any) {\n      dispatch({ type: \"ON_ANSWER\", message });\n    },\n    endCall() {\n      dispatch({ type: \"END_CALL\" });\n    },\n  };\n};\n","let client: WebSocket;\nlet username: string;\n\nexport const createWebSocket = (name: string) => {\n  // client = new window.WebSocket(\n  //   `wss://${document.location.hostname}:4000`,\n  //   \"json\"\n  // );\n  client = new window.WebSocket(`wss://ra-webrtc.herokuapp.com/`, \"json\");\n\n  username = name;\n  client.onopen = () => {\n    console.log(\"WebSocket client connected\");\n  };\n\n  client.onerror = (e) => console.error(\"WebSocket error observed:\", e);\n\n  return client;\n};\n\nexport const useWebSocket = () => {\n  if (!client) {\n    throw Error(\n      \"WebSocket is not created. Please call 'createWebSocket' before this hook\"\n    );\n  }\n  return client;\n};\n\nexport const sendToServer = (msg: any) => {\n  if (!client) {\n    throw Error(\n      \"WebSocket is not created. Please call 'createWebSocket' before this hook\"\n    );\n  }\n  msg.username = msg.username || username;\n  var msgJSON = JSON.stringify(msg);\n\n  // console.log(\"Sending '\" + msg.type + \"' message: \" + msgJSON);\n  client.send(msgJSON);\n};\n","import React from \"react\";\nimport { INIT_STATE, State } from \"../redux\";\n\ntype AppContextType = {\n  state: State;\n  actions: { [key: string]: Function };\n};\n\nconst defaultValue: AppContextType = { actions: {}, state: INIT_STATE };\n\nexport const AppContext = React.createContext(defaultValue);\n\nexport const useAppContext = () => React.useContext(AppContext);\n","import { sendToServer } from \"./WebSocket\";\n\nfunction log(text: string) {\n  // var time = new Date();\n  // console.log(\"[\" + time.toLocaleTimeString() + \"] \" + text);\n}\n\nfunction reportError(errMessage: Error) {\n  log_error(`Error ${errMessage.name}: ${errMessage.message}`);\n}\n\nfunction log_error(text: string | Error) {\n  var time = new Date();\n\n  console.trace(\"[\" + time.toLocaleTimeString() + \"] \" + text);\n}\n\nexport class WebRTC {\n  private conn: RTCPeerConnection;\n  username: string;\n  targetUser: string;\n\n  get connection() {\n    return this.conn;\n  }\n\n  constructor(username: string, targetUser: string) {\n    this.username = username;\n    this.targetUser = targetUser;\n    // Create an RTCPeerConnection which knows to use our chosen\n    // STUN server.\n    // this.conn = new RTCPeerConnection();\n    const configuration = {\n      iceServers: [\n        {\n          urls: [\n            \"stun:stun.l.google.com:19302\",\n            \"stun:stun1.l.google.com:19302\",\n            \"stun:stun2.l.google.com:19302\",\n          ],\n        },\n      ],\n    };\n    this.conn = new RTCPeerConnection(configuration);\n\n    // Set up event handlers for the ICE negotiation process.\n\n    // this.conn.onicecandidate = this.handleICECandidateEvent;\n    // this.conn.oniceconnectionstatechange =\n    //   this.handleICEConnectionStateChangeEvent;\n    // this.conn.onicegatheringstatechange =\n    //   this.handleICEGatheringStateChangeEvent;\n    // this.conn.onsignalingstatechange = this.handleSignalingStateChangeEvent;\n    // this.conn.onnegotiationneeded = this.handleNegotiationNeededEvent;\n    // this.conn.ontrack = this.handleTrackEvent;\n    // console.error(this);\n  }\n\n  private handleICECandidateEvent = (event: RTCPeerConnectionIceEvent) => {\n    if (event.candidate) {\n      log(\"*** Outgoing ICE candidate: \" + event.candidate.candidate);\n\n      sendToServer({\n        type: \"new-ice-candidate\",\n        target: this.targetUser,\n        candidate: event.candidate,\n      });\n    }\n  };\n\n  private handleICEConnectionStateChangeEvent = () => {\n    log(\"*** ICE connection state changed to \" + this.conn.iceConnectionState);\n\n    switch (this.conn.iceConnectionState) {\n      case \"closed\":\n      case \"failed\":\n      case \"disconnected\":\n        this.closeVideoCall();\n        break;\n    }\n  };\n\n  private handleICEGatheringStateChangeEvent = () => {\n    log(\"*** ICE gathering state changed to: \" + this.conn.iceGatheringState);\n  };\n\n  private handleSignalingStateChangeEvent = () => {\n    log(\"*** WebRTC signaling state changed to: \" + this.conn.signalingState);\n    switch (this.conn.signalingState) {\n      case \"closed\":\n        this.closeVideoCall();\n        break;\n    }\n  };\n\n  private handleNegotiationNeededEvent = async () => {\n    log(\"*** Negotiation needed\");\n\n    try {\n      log(\"---> Creating offer\");\n      const offer = await this.conn.createOffer();\n      if (!offer) {\n        console.log(\"Offer not created\");\n        return;\n      }\n\n      // If the connection hasn't yet achieved the \"stable\" state,\n      // return to the caller. Another negotiationneeded event\n      // will be fired when the state stabilizes.\n\n      if (this.conn.signalingState !== \"stable\") {\n        log(\"     -- The connection isn't stable yet; postponing...\");\n        return;\n      }\n\n      // Establish the offer as the local peer's current\n      // description.\n\n      log(\"---> Setting local description to the offer\");\n      await this.conn.setLocalDescription(offer);\n\n      // Send the offer to the remote peer.\n\n      log(\"---> Sending the offer to the remote peer\");\n      sendToServer({\n        name: this.username,\n        target: this.targetUser,\n        type: \"video-offer\",\n        sdp: this.conn.localDescription,\n      });\n    } catch (err) {\n      log(\n        \"*** The following error occurred while handling the negotiationneeded event:\"\n      );\n      reportError(err);\n    }\n  };\n\n  private handleTrackEvent = (event: RTCTrackEvent) => {\n    log(\"*** Track event\");\n    // document.getElementById(\"received_video\").srcObject = event.streams[0];\n    // document.getElementById(\"hangup-button\").disabled = false;\n  };\n\n  private closeVideoCall = () => {\n    // var localVideo = document.getElementById(\"local_video\");\n\n    log(\"Closing the call\");\n\n    // Close the RTCPeerConnection\n\n    if (this.conn) {\n      log(\"--> Closing the peer connection\");\n\n      // Disconnect all our event listeners; we don't want stray events\n      // to interfere with the hangup while it's ongoing.\n\n      this.conn.ontrack = null;\n      this.conn.onicecandidate = null;\n      this.conn.oniceconnectionstatechange = null;\n      this.conn.onsignalingstatechange = null;\n      this.conn.onicegatheringstatechange = null;\n      this.conn.onnegotiationneeded = null;\n\n      // Stop all transceivers on the connection\n\n      this.conn.getTransceivers().forEach((transceiver) => {\n        transceiver.stop();\n      });\n\n      // Stop the webcam preview as well by pausing the <video>\n      // element, then stopping each of the getUserMedia() tracks\n      // on it.\n\n      // if (localVideo.srcObject) {\n      //   localVideo.pause();\n      //   localVideo.srcObject.getTracks().forEach((track) => {\n      //     track.stop();\n      //   });\n      // }\n\n      // Close the peer connection\n\n      this.conn.close();\n      // this.conn = null;\n      // webcamStream = null;\n    }\n\n    // Disable the hangup button\n\n    // document.getElementById(\"hangup-button\").disabled = true;\n    // targetUsername = null;\n  };\n}\n","import React from \"react\";\nimport { useAppContext } from \"../../utils/AppContext\";\nimport { WebRTC } from \"../../utils/WebRTC\";\nimport { sendToServer } from \"../../utils/WebSocket\";\nimport styles from \"./VideoCall.module.scss\";\n\nexport type VideoCallType = {\n  target: string;\n  join?: boolean;\n  onCallEnd: () => void;\n};\n\nconst createAndSendAnswer = async (peerConn: RTCPeerConnection, offer: any) => {\n  const desc = new RTCSessionDescription(offer.offer);\n  await peerConn.setRemoteDescription(desc);\n  const answer = await peerConn.createAnswer();\n  await peerConn.setLocalDescription(answer);\n  sendToServer({\n    username: offer.from,\n    type: \"send_answer\",\n    answer: answer,\n  });\n};\n\nconst VideoCall: React.FC<VideoCallType> = ({ target, join, onCallEnd }) => {\n  const [localStream, setLocalStream] =\n    React.useState<MediaStream | undefined>();\n  const [remoteStream, setRemoteStream] =\n    React.useState<MediaStream | undefined>();\n  const [isCallStarted, setStartCall] = React.useState(false);\n  const [isJoined, setJoined] = React.useState(false);\n  const [isAnswered, setAnswered] = React.useState(false);\n  const [isMuteLocal, setMuteLocal] = React.useState(false);\n  const [isPauseLocal, setPauseLocal] = React.useState(false);\n  const [localVideo, setLocalVideo] =\n    React.useState<HTMLVideoElement | undefined>();\n\n  const [rtc, setRtc] = React.useState<RTCPeerConnection | undefined>();\n\n  const { state, actions } = useAppContext();\n\n  (window as any).state = state;\n\n  React.useEffect(() => {\n    if (localStream) {\n      localStream.getVideoTracks()[0].enabled = isPauseLocal;\n    }\n  }, [isPauseLocal, localStream]);\n\n  React.useEffect(() => {\n    if (localStream) {\n      localStream.getAudioTracks()[0].enabled = isMuteLocal;\n    }\n  }, [isMuteLocal, localStream]);\n\n  const localRef = (video: HTMLVideoElement) => {\n    if (localStream && video) {\n      video.srcObject = localStream;\n      setLocalVideo(video);\n    }\n  };\n\n  const remoteRef = (video: HTMLVideoElement) => {\n    if (remoteStream && video) {\n      console.log(\"set remoteStream\", video, remoteStream);\n      video.srcObject = remoteStream;\n    }\n  };\n\n  const handleEndCall = React.useCallback(() => {\n    if (state.rtc?.connection) {\n      state.rtc.connection.ontrack = null;\n      state.rtc.connection.onicecandidate = null;\n      state.rtc.connection.oniceconnectionstatechange = null;\n      state.rtc.connection.onsignalingstatechange = null;\n      state.rtc.connection.onicegatheringstatechange = null;\n      state.rtc.connection.onnegotiationneeded = null;\n\n      state.rtc.connection.getTransceivers().forEach((transceiver) => {\n        transceiver.stop();\n      });\n\n      if (localVideo?.srcObject) {\n        localVideo.pause();\n        (localVideo.srcObject as MediaStream).getTracks().forEach((track) => {\n          track.stop();\n        });\n      }\n\n      state.rtc.connection.close();\n      actions.initRtc(undefined);\n      sendToServer({\n        type: \"end_call\",\n        target,\n      });\n\n      onCallEnd();\n    }\n  }, [actions, localVideo, onCallEnd, state.rtc?.connection, target]);\n\n  React.useEffect(() => {\n    const createAndSendOffer = async (peerConn: RTCPeerConnection) => {\n      const offer = await peerConn.createOffer({});\n\n      sendToServer({\n        target,\n        type: \"store_offer\",\n        offer: offer,\n      });\n\n      peerConn.setLocalDescription(offer);\n    };\n\n    const createPeerConn = async (mode: \"start\" | \"join\") => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          frameRate: 24,\n          width: {\n            min: 480,\n            ideal: 720,\n            max: 1280,\n          },\n          aspectRatio: 1.33333,\n        },\n        audio: true,\n      });\n\n      setLocalStream(stream);\n\n      const rtc = new WebRTC(state.username, target);\n      actions.initRtc(rtc);\n      setRtc(rtc.connection);\n\n      stream.getTracks().forEach(function (track) {\n        rtc.connection.addTrack(track, stream);\n      });\n\n      rtc.connection.ontrack = (e) => {\n        setRemoteStream(e.streams[0]);\n      };\n\n      if (mode === \"start\") {\n        rtc.connection.onicecandidate = (e) => {\n          if (e.candidate == null) {\n            return;\n          }\n\n          sendToServer({\n            target,\n            type: \"store_candidate\",\n            candidate: e.candidate,\n          });\n        };\n      } else {\n        rtc.connection.onicecandidate = (e) => {\n          if (e.candidate == null) return;\n\n          sendToServer({\n            username: state.offer.from,\n            type: \"send_candidate\",\n            candidate: e.candidate,\n          });\n        };\n      }\n\n      return rtc;\n    };\n\n    const startCall = async () => {\n      const rtc = await createPeerConn(\"start\");\n\n      createAndSendOffer(rtc.connection);\n    };\n\n    if (!join && !isCallStarted) {\n      setStartCall(true);\n      startCall();\n    }\n    if (join && !isJoined) {\n      setJoined(true);\n      createPeerConn(\"join\");\n    }\n  }, [\n    state.username,\n    state.offer,\n    actions,\n    join,\n    target,\n    isCallStarted,\n    isJoined,\n  ]);\n\n  React.useEffect(() => {\n    if (state.offer && rtc && !isAnswered) {\n      setAnswered(true);\n      createAndSendAnswer(rtc, state.offer);\n    }\n  }, [state.offer, rtc, isAnswered, target]);\n\n  React.useEffect(() => {\n    if (state.endCall) {\n      handleEndCall();\n    }\n  }, [state.endCall, handleEndCall]);\n\n  return (\n    <div className={styles.VideoCall} data-testid=\"VideoCall\">\n      <video\n        className={styles.LocalVideo}\n        autoPlay\n        ref={localRef}\n        muted\n      ></video>\n      <video className={styles.RemoteVideo} autoPlay ref={remoteRef}></video>\n      <div className={styles.CallActionDiv}>\n        <button onClick={() => setPauseLocal(!isPauseLocal)}>\n          {isPauseLocal ? \"Play\" : \"Pause\"} Video\n        </button>\n        <button onClick={() => setMuteLocal(!isMuteLocal)}>\n          {isMuteLocal ? \"Unmute\" : \"Mute\"} Audio\n        </button>\n        <button onClick={handleEndCall}>End Call</button>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCall;\n","import React from \"react\";\nimport { useAppContext } from \"../../utils/AppContext\";\nimport VideoCall from \"../VideoCall/VideoCall\";\nimport styles from \"./UserList.module.scss\";\n\ntype UserListProps = {\n  user?: string;\n  onCallEnd?: () => void;\n};\nconst UserList: React.FC<UserListProps> = ({ user, onCallEnd }) => {\n  const [selectedUser, setSelectedUser] = React.useState(\"\");\n  const { state } = useAppContext();\n\n  const callUser = React.useCallback(\n    (event: React.SyntheticEvent<HTMLLIElement>) => {\n      const currentUser = event.currentTarget.dataset.name;\n      if (currentUser && state.username !== currentUser) {\n        console.log(\"Call user: \", currentUser);\n        setSelectedUser(currentUser);\n      }\n    },\n    [state.username]\n  );\n\n  const handleCallEnd = React.useCallback(() => {\n    setSelectedUser(\"\");\n    onCallEnd && onCallEnd();\n    console.log(\"Call ended\");\n  }, [onCallEnd]);\n\n  React.useEffect(() => {\n    setSelectedUser(user || \"\");\n  }, [user]);\n\n  if (selectedUser) {\n    return (\n      <VideoCall\n        target={selectedUser}\n        join={!!user}\n        onCallEnd={handleCallEnd}\n      />\n    );\n  }\n\n  return (\n    <ul className={styles.UserList} data-testid=\"UserList\">\n      {state.users.map((user, index) => (\n        <li key={index} data-name={user} onClick={callUser}>\n          {user}\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default UserList;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport styles from \"./Login.module.scss\";\nimport { createWebSocket, sendToServer } from \"../../utils/WebSocket\";\nimport { useAppContext } from \"../../utils/AppContext\";\n\nexport type LoginType = {\n  onMessage: (evt: MessageEvent) => void;\n};\nconst Login: React.FC<LoginType> = ({ onMessage }: LoginType) => {\n  const [name, setName] = React.useState(\"\");\n  const [isConnected, setIsConnected] = React.useState(false);\n  const { actions } = useAppContext();\n\n  const handleInput = React.useCallback(\n    (evt) => {\n      setName(evt.target.value);\n      actions.setUserName(evt.target.value);\n    },\n    [actions]\n  );\n\n  const connect = React.useCallback(() => {\n    console.log(\"Connect\");\n    const ws = createWebSocket(name);\n    ws.onerror = (event) => {\n      console.error(\"Error occurred: \", event);\n    };\n\n    ws.onopen = () => {\n      console.log(\"WebSocket client connected\");\n      sendToServer({\n        type: \"store_user\",\n        username: name,\n      });\n      setIsConnected(true);\n    };\n\n    ws.onmessage = onMessage;\n    actions.initSocket(ws);\n  }, [onMessage, actions, name]);\n\n  if (isConnected) {\n    return <Redirect to=\"/user-list\" />;\n  }\n  return (\n    <div className={styles.Login} data-testid=\"Login\">\n      <label>Username</label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        maxLength={12}\n        required\n        value={name}\n        onChange={handleInput}\n        autoComplete=\"username\"\n        inputMode=\"text\"\n        placeholder=\"Username\"\n      />\n      <button onClick={connect}>Login</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"webrtc-adapter\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport UserList from \"./components/UserList/UserList\";\n// import Chatroom from \"./components/Chatroom/Chatroom\";\nimport Login from \"./components/Login/Login\";\nimport { AppContext, useAppContext } from \"./utils/AppContext\";\nimport { actions, INIT_STATE, reducer } from \"./redux\";\nimport styles from \"./App.module.scss\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}: JSX.IntrinsicAttributes & { children?: React.ReactNode; path: string }) {\n  const { state } = useAppContext();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        state.username ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, INIT_STATE);\n  const [offer, setOffer] = React.useState<any>(false);\n  const [gotoVideoCall, setVideoCall] = React.useState(false);\n\n  const reduxActions = React.useMemo(() => {\n    return actions(dispatch);\n  }, []);\n\n  const onMessage = (evt: MessageEvent) => {\n    var msg = JSON.parse(evt.data);\n\n    switch (msg.type) {\n      case \"userlist\": // Received an updated user list\n        reduxActions.setUsers(msg.users);\n        break;\n\n      case \"answer\":\n        reduxActions.onAnswer(msg.answer);\n        break;\n\n      case \"candidate\":\n        reduxActions.addIceCandidate(msg);\n        break;\n\n      case \"offer\":\n        reduxActions.videoOffer(msg);\n        setOffer(msg);\n        break;\n\n      case \"end_call\":\n        reduxActions.endCall();\n        break;\n\n      default:\n        // reduxActions.addSockMessage(msg);\n        console.error(\"Unknown message received:\", msg);\n    }\n  };\n\n  return (\n    <AppContext.Provider value={{ state, actions: reduxActions }}>\n      <div className={styles.App}>\n        <header className={styles.AppHeader}>\n          <span>WebRTC Demo</span>\n        </header>\n        {offer && !gotoVideoCall && (\n          <div className={styles.Calling}>\n            <div className={styles.CallingMessage}>\n              <b>{(offer as any).from} Calling...</b>\n              <audio src=\"tmobile_wav.mp3\" autoPlay loop />\n            </div>\n            <div className={styles.CallingActions}>\n              <button\n                className={styles.Accept}\n                onClick={() => {\n                  // redirect to chatroom\n                  setVideoCall(true);\n                }}\n              >\n                Accept\n              </button>\n              <button\n                className={styles.Reject}\n                onClick={() => {\n                  //hide this div\n                  setOffer(undefined);\n                }}\n              >\n                Reject\n              </button>\n            </div>\n          </div>\n        )}\n        {gotoVideoCall ? (\n          <UserList\n            user={(offer as any).from}\n            onCallEnd={() => {\n              setVideoCall(false);\n              setOffer(undefined);\n            }}\n          />\n        ) : (\n          <Switch>\n            <PrivateRoute path=\"/user-list\">\n              <UserList />\n            </PrivateRoute>\n            <Route path=\"*\">\n              <Login onMessage={onMessage} />\n            </Route>\n          </Switch>\n        )}\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}